---
######################################################################
# Base packages
######################################################################

#=====================================================================
# Debian
#=====================================================================

# Update cache if older than 1 day (86400s)
- name: Make sure base packages are installed
  apt: name={{ item }} state={{ packages_state }}
       update_cache=yes cache_valid_time=86400
  with_items: common_packages.debian
  when: ansible_os_family == 'Debian'
  tags: [ common, packages ]

- name: Make sure unwanted packages are removed
  apt: name={{ item }} state=absent
  with_items: common_packages_removed.debian
  when: ansible_os_family == 'Debian'
  tags: [ common, packages ]

#=====================================================================
# Red Hat
#=====================================================================

- name: Install required packages for SELinux in RedHat
  yum: name=libselinux-python state=present
  when: ansible_os_family == 'RedHat'
  tags: [ common, packages ]

# EPEL is required for htop
# NOTE: On production Red Hat supported machines, until absolutely necessary,
# it's probably better not use unofficial repos.
# https://access.redhat.com/solutions/410753?tour=6
- name: Install EPEL for RedHat
  yum: name="https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
       state=present
  when: ansible_os_family == 'RedHat'
  tags: [ common, packages ]

# NOTE: To install EPEL on RHEL, the "optional" repo may be required:
# https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F
# TODO: Test and verify this enabling task on Red Hat and CentOS:
- name: Enable RHEL Optional repo for RedHat (but not for CentOS)
  yum: enable="rhel-{{ ansible_distribution_major_version }}-server-optional-rpms"
  when: ansible_distribution == 'RedHat'
  tags: [ common, packages ]

- name: Make sure base packages are installed
  yum: name={{ item }} state={{ packages_state }}
  with_items: common_packages.redhat
  when: ansible_os_family == 'RedHat'
  tags: [ common, packages ]

- name: Make sure unwanted packages are removed
  yum: name={{ item }} state=absent
  with_items: common_packages_removed.redhat
  when: ansible_os_family == 'RedHat'
  tags: [ common, packages ]

######################################################################
# Shell configuration
######################################################################

- name: Bash aliases
  lineinfile: dest="{{ item[0].home }}/.bashrc" state=present
              line="{{ item[1] }}"
  with_nested:
    - users
    - [
      "alias l='ls --color=auto -F -al'",
      "alias v=vim",
      ]
  tags: [ common, bash ]

#=====================================================================
# Vim
#=====================================================================

- name: Vim configuration
  lineinfile: dest="{{ item[0].home }}/.vimrc" state=present
              line="{{ item[1] }}" create=yes
              owner="{{ item[0].name }}" group="{{ item[0].group | default(item[0].name) }}"
  with_nested:
    - users
    - [
      "set nocompatible hlsearch ignorecase smartcase showmatch",
      "set number list listchars=tab:>-,trail:-,nbsp:%",
      "set smartindent tabstop=4 softtabstop=4 shiftwidth=4 expandtab autoindent",
      "set nojoinspaces mouse=a hidden",
      "color elflord",
      ]
  tags: [ common, vim ]

#=====================================================================
# Liquidprompt
#=====================================================================

- name: Checkout Liquidprompt from Github
  git: repo=https://github.com/nojhan/liquidprompt.git
       dest=/opt/liquidprompt
  when: liquidprompt == true
  tags: [ common, liquidprompt ]

# Current user
- name: Enable Liquidprompt
  lineinfile: line="source /opt/liquidprompt/liquidprompt"
              dest="{{ item.home }}/.bashrc" state=present
  with_items: users
  when: liquidprompt == true
  tags: [ common, liquidprompt ]

- name: Configure Liquidprompt
  template: src="{{ item[1] }}" dest="{{ item[0].home }}/.{{ item[1] }}"
        owner="{{ item[0].name }}" group="{{ item[0].group | default(item[0].name) }}"
  with_nested:
    - users
    - [
      "liquidpromptrc",
      "liquid.theme",
      ]
  when: liquidprompt == true
  tags: [ common, liquidprompt ]

# vim: ft=ansible
