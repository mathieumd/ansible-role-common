---
# tasks file for common

######################################################################
# Base packages
######################################################################

- name: Make sure base packages are installed
  # Update cache if older than 1 day
  apt: name={{ item }} state=latest update_cache=yes cache_valid_time=86400
  with_items:
    - ntp
    - tzdata
    - vim
    - screen
    - htop
    - git
  tags: packages

######################################################################
# Locale
######################################################################

- name: Make sure wanted locales are present
  locale_gen: name="{{ item }}" state=present
  with_items: "{{ locale | default('en_US.UTF-8') }}"
  tags: locale

# FIXME "locale[0]" would be "e" (for "en_US") if variable is not a list!
- name: Set default Locale and Language
  lineinfile: line='export {{ item[0] }}="{{ item[1] }}"'
              regexp='^export {{ item[0] }}='
              dest=/etc/profile
              state=present create=yes
  with_nested:
    - [ 'LC_ALL', 'LANG' ]
    - "{{ locale[0] | default('en_US.UTF-8') }}"
  tags: locale

######################################################################
# NTP
######################################################################

- name: be sure ntp is running and enabled
  service: name=ntp state=running enabled=yes
  tags: time

######################################################################
# UTC Timezone
######################################################################

- name: Set timezone
  lineinfile: line='{{ timezone | default('Etc/UTC') }}'
              regexp='^.*$'
              dest=/etc/timezone
              state=present create=yes
  notify: reconfigure tzdata
  tags: time

######################################################################
# Shell configuration
######################################################################

# FIXME: AWFUL HACK: In order to modify current {{ ansible_ssh_user }}'s own
# $HOME files, I didn't find a better solution than using the $PWD which is
# still set to /home/deploy even during sudo. :-(

- name: Bash aliases
  lineinfile: dest="{{ item[0] }}/.bashrc" state=present
              line="{{ item[1] }}"
  with_nested:
    - users_homes
    - [
      "alias l='ls --color=auto -F -al'",
      "alias v=vim",
      ]

- name: Checkout Vundle from Github
  git: repo=https://github.com/gmarik/Vundle.vim.git
       dest="{{ item }}/.vim/bundle/Vundle.vim"
  with_items:
    - "{{ users_homes }}"
  when: vim_vundle == true

- name: Vim configuration
  lineinfile: dest="{{ item[0] }}/.vimrc" state=present
              line="{{ item[1] }}" create=yes
  with_nested:
    - users_homes
    - [
      "set nocompatible",
      "set hlsearch",
      "set ignorecase",
      "set smartcase",
      "set showmatch",
      "set number",
      "set list",
      "set listchars=tab:>-,trail:-,nbsp:%",
      "set smartindent",
      "set tabstop=4",
      "set softtabstop=4",
      "set shiftwidth=4",
      "set expandtab",
      "set autoindent",
      "set nojoinspaces",
      "set mouse=a",
      "set hidden",
      "color elflord",
      ]

- name: Vim Vundle configuration
  lineinfile: dest="{{ item[0] }}/.vimrc" state=present
              line="{{ item[1] }}" create=yes
  with_nested:
    - users_homes
    - [
      "filetype off",
      "set rtp+=~/.vim/bundle/Vundle.vim",
      "call vundle#begin()",
      "Plugin 'gmarik/Vundle.vim'",
      "Plugin 'tpope/vim-sensible'",
      "call vundle#end()",
      "filetype plugin indent on",
      ]
  when: vim_vundle == true

- name: Vim install plugins
  command: su -c "vim +PluginInstall +qall" {{ item }}
  with_items:
    - "{{ users_list }}"
  changed_when: false
  when: vim_vundle == true

#=====================================================================
# Liquidprompt
#=====================================================================

- name: Checkout Liquidprompt from Github
  git: repo=https://github.com/nojhan/liquidprompt.git
       dest=/opt/liquidprompt
  when: liquidprompt == true
  tags: liquidprompt

# Current user
- name: Enable Liquidprompt
  lineinfile: line="source /opt/liquidprompt/liquidprompt"
              dest="{{ item }}/.bashrc"
              state=present
  with_items:
    - "{{ users_homes }}"
  when: liquidprompt == true
  tags: liquidprompt

- name: Configure Liquidprompt
  copy: src="{{ item[1] }}" dest="{{ item[0] }}/.{{ item[1] }}"
  with_nested:
    - users_homes
    - [
      "liquidpromptrc",
      "liquid.theme",
      ]
  when: liquidprompt == true
  tags: liquidprompt

# vim: ft=ansible
