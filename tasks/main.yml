---
# tasks file for common

######################################################################
# Base packages
######################################################################

- name: Make sure base packages are installed
  # Update cache if older than 1 day
  apt: name={{ item }} state=latest update_cache=yes cache_valid_time=86400
  with_items:
    - ntp
    - tzdata
    - vim
    - screen
    - htop
    - git
  tags: packages

######################################################################
# Locale
######################################################################

- name: Make sure wanted locales are present
  locale_gen: name="{{ item }}" state=present
  with_items: "{{ locale | default('en_US.UTF-8') }}"
  tags: locale

# FIXME "locale[0]" would be "e" (for "en_US") if variable is not a list!
- name: Set default Locale and Language
  lineinfile: line='export {{ item[0] }}="{{ item[1] }}"'
              regexp='^export {{ item[0] }}='
              dest=/etc/profile
              state=present create=yes
  with_nested:
    - [ 'LC_ALL', 'LANG' ]
    - "{{ locale[0] | default('en_US.UTF-8') }}"
  tags: locale

######################################################################
# NTP
######################################################################

- name: be sure ntp is running and enabled
  service: name=ntp state=running enabled=yes
  tags: time

######################################################################
# UTC Timezone
######################################################################

- name: Set timezone
  lineinfile: line='{{ timezone | default('Etc/UTC') }}'
              regexp='^.*$'
              dest=/etc/timezone
              state=present create=yes
  notify: reconfigure tzdata
  tags: time

######################################################################
# Shell configuration
######################################################################

- name: Bash aliases
  sudo: no
  lineinfile: dest="~/.bashrc" state=present line="{{ item }}"
  with_items:
    - "alias l='ls --color=auto -F -al'"
    - "alias v=vim"

- name: Checkout Vundle from Github
  sudo: no
  git: repo=https://github.com/gmarik/Vundle.vim.git
       dest="~/.vim/bundle/Vundle.vim"
  when: vim_vundle == true

- name: Vim configuration
  sudo: no
  lineinfile: dest="~/.vimrc" state=present line="{{ item }}" create=yes
  with_items:
    - "set nocompatible"
    - "set hlsearch"
    - "set ignorecase"
    - "set smarcase"
    - "set showmatch"
    - "set number"
    - "set list"
    - "set smartindent"
    - "set tabstop=4"
    - "set softtabstop=4"
    - "set shiftwidth=4"
    - "set exapandtab"
    - "set autoindent"
    - "set nojoinspaces"
    - "set mouse=a"
    - "set hidden"

- name: Vim Vundle configuration
  lineinfile: dest="~/.vimrc" state=present line="{{ item }}" create=yes
  with_items:
    - "filetype off"
    - "set rtp+=~/.vim/bundle/Vundle.vim"
    - "call vundle#begin()"
    - "Plugin 'gmarik/Vundle.vim'"
    - "Plugin 'tpope/vim-sensible'"
    - "call vundle#end()"
    - "filetype plugin indent on"
  when: vim_vundle == true

- name: Vim install plugins
  sudo: no
  command: vim +PluginInstall +qall
  changed_when: false
  when: vim_vundle == true

#=====================================================================
# Liquidprompt
#=====================================================================

- name: Checkout Liquidprompt from Github
  git: repo=https://github.com/nojhan/liquidprompt.git
       dest=/opt/liquidprompt
  when: liquidprompt == true
  tags: liquidprompt

# Current user
- name: Enable Liquidprompt (for current user)
  sudo: no
  lineinfile: line="source /opt/liquidprompt/liquidprompt"
              dest="~/.bashrc"
              state=present
  when: liquidprompt == true
  tags: liquidprompt

- name: Configure Liquidprompt (for current user)
  sudo: no
  copy: src="{{ item }}" dest="~/.{{ item }}"
  with_items:
    - liquidpromptrc
    - liquid.theme
  when: liquidprompt == true
  tags: liquidprompt

# Root user (through sudo)
- name: Enable Liquidprompt (for root user)
  lineinfile: line="source /opt/liquidprompt/liquidprompt"
              dest="~/.bashrc"
              state=present
  when: liquidprompt == true
  tags: liquidprompt

- name: Configure Liquidprompt (for root user)
  copy: src="{{ item }}" dest="~/.{{ item }}"
  with_items:
    - liquidpromptrc
    - liquid.theme
  when: liquidprompt == true
  tags: liquidprompt

# vim: ft=ansible
